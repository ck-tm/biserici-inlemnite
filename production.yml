version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: biserici_inlemnite_production_django
    depends_on:
      - postgres
      # - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    volumes:
      - /mnt/HC_Volume_12351385/media:/app/biserici_inlemnite/media
  media:
    image: nginx:stable-alpine
    volumes:
      - /mnt/HC_Volume_12351385/media:/usr/share/nginx/html/media

  frontend:
    build:
      context: .
      dockerfile: ./compose/production/frontend/Dockerfile
    image: oxigen_api_production_frontend
    depends_on:
      - django
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: biserici_inlemnite_production_postgres
    volumes:
      - /mnt/HC_Volume_12351385/pgdata:/var/lib/postgresql/data:Z
      - /mnt/HC_Volume_12351385/pgbackups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: biserici_inlemnite_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
  # cache-bi:
  #  image: memcached
  #  ports:
  #    - "11211:11211"
  #  entrypoint:
  #   - memcached
  #   - -m 64
  redis-bi:
    image: redis:alpine
  # redis:
  #   image: redis:5.0

  # celeryworker:
  #   <<: *django
  #   image: biserici_inlemnite_production_celeryworker
  #   command: /start-celeryworker

  # celerybeat:
  #   <<: *django
  #   image: biserici_inlemnite_production_celerybeat
  #   command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: biserici_inlemnite_production_flower
  #   command: /start-flower
