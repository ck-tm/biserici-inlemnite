# Generated by Django 3.1.13 on 2021-07-30 23:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        (
            "nomenclatoare",
            "0005_boltapestealtar_historicalboltapestealtar_historicaltipboltapestealtar_historicaltipboltapronaos_tip",
        ),
        ("biserici", "0017_auto_20210730_1652"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="biserica",
            options={"ordering": ["the_order"], "verbose_name_plural": "Biserici"},
        ),
        migrations.AddField(
            model_name="biserica",
            name="the_order",
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AddField(
            model_name="historicalbiserica",
            name="the_order",
            field=models.PositiveIntegerField(db_index=True, default=0, editable=False),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_naos_altar_detalii",
            field=models.TextField(
                blank=True,
                help_text="Particularități ale iconostasului ce merită a fi precizate (de urmărit care este standardul de iconostas în zonă și care sunt eventualele deviații de la standard",
                null=True,
                verbose_name="Detalii",
            ),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_naos_altar_finisaj",
            field=models.ManyToManyField(
                blank=True,
                related_name="iconostasuri_naos_altar",
                to="nomenclatoare.FinisajIconostas",
                verbose_name="Finisaj",
            ),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_naos_altar_numar_intrari",
            field=models.IntegerField(blank=True, null=True, verbose_name="Număr intrări"),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_naos_altar_tip",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="iconostasuri_naos_altar",
                to="nomenclatoare.tipiconostas",
                verbose_name="Tip",
            ),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_pronaos_naos_detalii",
            field=models.TextField(
                blank=True,
                help_text="Particularități ale iconostasului ce merită a fi precizate (de urmărit care este standardul de iconostas în zonă și care sunt eventualele deviații de la standard",
                null=True,
                verbose_name="Detalii",
            ),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_pronaos_naos_finisaj",
            field=models.ManyToManyField(
                blank=True,
                related_name="iconostasuri_pronaos_naos",
                to="nomenclatoare.FinisajIconostas",
                verbose_name="Finisaj",
            ),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_pronaos_naos_numar_intrari",
            field=models.IntegerField(blank=True, null=True, verbose_name="Număr intrări"),
        ),
        migrations.AlterField(
            model_name="componentaartistica",
            name="iconostas_pronaos_naos_tip",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="iconostasuri_pronaos_naos",
                to="nomenclatoare.tipiconostas",
                verbose_name="Tip",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_naos_altar_detalii",
            field=models.TextField(
                blank=True,
                help_text="Particularități ale iconostasului ce merită a fi precizate (de urmărit care este standardul de iconostas în zonă și care sunt eventualele deviații de la standard",
                null=True,
                verbose_name="Detalii",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_naos_altar_numar_intrari",
            field=models.IntegerField(blank=True, null=True, verbose_name="Număr intrări"),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_naos_altar_tip",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="nomenclatoare.tipiconostas",
                verbose_name="Tip",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_pronaos_naos_detalii",
            field=models.TextField(
                blank=True,
                help_text="Particularități ale iconostasului ce merită a fi precizate (de urmărit care este standardul de iconostas în zonă și care sunt eventualele deviații de la standard",
                null=True,
                verbose_name="Detalii",
            ),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_pronaos_naos_numar_intrari",
            field=models.IntegerField(blank=True, null=True, verbose_name="Număr intrări"),
        ),
        migrations.AlterField(
            model_name="historicalcomponentaartistica",
            name="iconostas_pronaos_naos_tip",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="nomenclatoare.tipiconostas",
                verbose_name="Tip",
            ),
        ),
    ]
