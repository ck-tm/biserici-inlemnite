# Generated by Django 3.1.13 on 2022-07-18 14:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        (
            "fragmente",
            "0004_historicaltipformarelief_historicaltipreperhidrografic_historicaltipzonenaturale_tipformarelief_tipr",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("biserici", "0057_auto_20220718_1733"),
    ]

    operations = [
        migrations.CreateModel(
            name="RepereGeograficeZoneNaturale",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("observatii", models.TextField(blank=True, null=True, verbose_name="Observații")),
                (
                    "tip_zone",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="biserici",
                        to="fragmente.TipZoneNaturale",
                        verbose_name="Tip Zone Naturale",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepereGeograficeReperHidrografic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "denumire",
                    models.CharField(blank=True, max_length=150, null=True, verbose_name="Denumire Reper Hidrografic"),
                ),
                ("observatii", models.TextField(blank=True, null=True, verbose_name="Observații")),
                (
                    "tip_reper",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="biserici",
                        to="fragmente.tipreperhidrografic",
                        verbose_name="Tipul Reperului Hidrografic",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepereGeograficeFormaRelief",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "denumire",
                    models.CharField(blank=True, max_length=150, null=True, verbose_name="Denumire Formă de Relief"),
                ),
                ("observatii", models.TextField(blank=True, null=True, verbose_name="Observații")),
                (
                    "tip_forma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="biserici",
                        to="fragmente.tipformarelief",
                        verbose_name="Tipul Formei de Relief",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepereGeografice",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("biserica", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="biserici.biserica")),
                (
                    "forma_relief",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="biserici.reperegeograficeformarelief",
                        verbose_name="Formă de relief",
                    ),
                ),
                (
                    "reper_hidrografic",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="biserici.reperegeograficereperhidrografic",
                        verbose_name="Reper Hidrografic",
                    ),
                ),
                (
                    "zone_naturale",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="biserici.reperegeograficezonenaturale",
                        verbose_name="Zone Naturale (Arii Protejate)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Repere Geografice",
                "verbose_name_plural": "Repere Geografice",
                "ordering": ["biserica__the_order"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalRepereGeografice",
            fields=[
                ("id", models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "biserica",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="biserici.biserica",
                    ),
                ),
                (
                    "forma_relief",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="biserici.reperegeograficeformarelief",
                        verbose_name="Formă de relief",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reper_hidrografic",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="biserici.reperegeograficereperhidrografic",
                        verbose_name="Reper Hidrografic",
                    ),
                ),
                (
                    "zone_naturale",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="biserici.reperegeograficezonenaturale",
                        verbose_name="Zone Naturale (Arii Protejate)",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Repere Geografice",
                "verbose_name_plural": "historical Repere Geografice",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
